buildscript {
    ext {
        springBootVersion = "2.0.2.RELEASE"
        swagger2markupVersion = "1.3.3"
        springfoxVersion = "2.9.2"
    }
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath 'org.asciidoctor:asciidoctor-gradle-plugin:1.5.3'
        classpath 'org.asciidoctor:asciidoctorj-pdf:1.5.0-alpha.16'
        classpath "io.github.swagger2markup:swagger2markup-spring-restdocs-ext:${swagger2markupVersion}"
        classpath "io.github.swagger2markup:swagger2markup-gradle-plugin:${swagger2markupVersion}"
    }
}

apply plugin: "java"
apply plugin: "org.springframework.boot"
apply plugin: "io.spring.dependency-management"
apply plugin: "org.asciidoctor.convert"
apply plugin: "io.github.swagger2markup"
apply plugin: "war"

group = "pl.edu.amu.wmi.eryk"
version = "0.0.1-SNAPSHOT"
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

ext {
    snippetsOutputDir = file("${buildDir}/asciidoc/snippets")
    asciiDocOutputDir = file("${buildDir}/asciidoc/generated")
    swaggerOutputDir = file("${buildDir}/swagger")
}

test {
    systemProperty 'io.springfox.staticdocs.outputDir', swaggerOutputDir
    systemProperty 'io.springfox.staticdocs.snippetsOutputDir', snippetsOutputDir
}

asciidoctor {
    inputs.dir snippetsOutputDir
    dependsOn test
}

dependencies {
    compile project(":eryk-web-server-model")
    compile project(":eryk-web-server-common")
    compile "io.springfox:springfox-swagger-ui:${springfoxVersion}"
    compile "io.springfox:springfox-swagger2:${springfoxVersion}"
    compile "com.microsoft.sqlserver:mssql-jdbc:6.4.0.jre8"
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("org.springframework.boot:spring-boot-starter-web")
    compile "com.github.dozermapper:dozer-core:6.4.1"
    compile "com.github.dozermapper:dozer-spring4:6.4.1"
    testCompile("org.springframework.boot:spring-boot-starter-test")
    compile "org.postgresql:postgresql:42.2.1"
//    providedRuntime "org.springframework.boot:spring-boot-starter-tomcat:$springBootVersion"
    compileOnly "org.projectlombok:lombok:1.16.16"
    testCompile "org.springframework.restdocs:spring-restdocs-mockmvc"
    compile "io.swagger:swagger-annotations:1.5.6"
    testCompile "io.springfox:springfox-bean-validators:${springfoxVersion}"
    compile "org.springframework.restdocs:spring-restdocs-mockmvc:${springBootVersion}"
    testCompile "junit:junit:4.12"
}

//    compile("com.fasterxml.jackson.dataformat:jackson-dataformat-smile:2.6.5")
//    compile("com.fasterxml.jackson.module:jackson-module-afterburner:2.6.5")
//    testCompile "com.fasterxml.jackson.module:jackson-module-jsonSchema:2.6.5"

convertSwagger2markup {
    dependsOn test
    swaggerInput "${swaggerOutputDir}/swagger.json"
    outputDir asciiDocOutputDir
    config = [
            "swagger2markup.pathsGroupedBy"                          : "TAGS",
            "swagger2markup.extensions.springRestDocs.snippetBaseUri": snippetsOutputDir.getAbsolutePath()]
}

asciidoctor {
    dependsOn convertSwagger2markup
    sources {
        include "index.adoc"
    }
    backends = ["pdf"]
    attributes = [
            doctype    : "book",
            toc        : "left",
            toclevels  : "3",
            numbered   : "",
            sectlinks  : "",
            sectanchors: "",
            hardbreaks : "",
            generated  : asciiDocOutputDir
    ]
}